title: |-
  # [Release Please](https://github.com/googleapis/release-please)
introduction: |-
  `release-please` generates GitHub PRs for library releases based on the
  [conventionalcommits.org](https://www.conventionalcommits.org) commit
  specification and [SemVer](https://semver.org/).

  _Release Please_ can be configured (using [GitHub Actions](https://github.com/features/actions),
  a cron, or a step during CI/CD) to maintain a PR that represents the next release
  of your library.

  When the candidate PR is merged, _Release Please_ can be configured to create
  a [GitHub Release](https://help.github.com/en/articles/creating-releases).

  Here's an [example of Release Please in action](https://github.com/googleapis/nodejs-logging/pull/487).

  ### The _Release Please_ Repository:
body: |-
  ## Maintaining a Release PR

  To configure _Release Please_ to maintain an up-to-date release
  pull-request on your repository, setup the following command to execute
  when changes are pushed to `master`:

  ```bash
  release-please release-pr --package-name=@google-cloud/firestore" \
    --repo-url=googleapis/nodejs-firestore \
    --token=$GITHUB_TOKEN
  ```

  * `--package-name`: is the name of the package to publish to publish to
    an upstream registry such as npm.
  * `--repo-url`: is the URL of the repository on GitHub.
  * `--token`: a token with write access to `--repo-url`.

  ### Creating GitHub Releases

  To configure _Release Please_ to generate GitHub Releases when release
  pull-requests are merged to `master`, setup the following command to
  execute when changes are pushed to `master`:

  ```bash
  release-please github-release --repo-url=googleapis/nodejs-firestore \
    --token=$GITHUB_TOKEN
  ```

  * `--repo-url`: is the URL of the repository on GitHub.
  * `--token`: a token with write access to `--repo-url`.

  ### GitHub Actions

  An elegant way to configure `Release Please` is through
  [GitHub Actions](https://github.com/features/actions). To generate a
  `main.workflow` for `Release Please`, simply run:

  ```bash
  release-please generate-action --package-name=@google-cloud/firestore"
  ```

  * `--package-name`: is the name of the package to publish to publish to
    an upstream registry such as npm.
